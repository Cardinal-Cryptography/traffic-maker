name: Clippy + formatting + cargo test

on:
  pull_request:
    branches:
      - "**"
  push:
    # Build on push to main to (among other things) populate caches - caches are isolated by branch,
    # but the main cache is available to other branches
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  clippy-and-fmt:
    name: Clippy + formatting + cargo test
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_VERSION: 0.2.13
      SCCACHE_CACHE_SIZE: 2G
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN_VERSION }}
          override: true

      - name: Install clippy and fmt
        run: rustup component add clippy rustfmt

      - name: Restore cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            !~/.cargo/registry/src
            target/
          key: ${{ runner.os }}-cargo-v2-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-v2

      - name: Install sccache for ubuntu-latest
        run: |
          LINK=https://github.com/mozilla/sccache/releases/download
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl

          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache

          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Restore sccache
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/sccache
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-

      - name: Start sccache server
        run: sccache --start-server

      - name: Install cargo-cache
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-cache

      - name: Run Format Checks
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all

      - name: Run Linter
        uses: actions-rs/cargo@v1
        env:
          # https://github.com/mozilla/sccache/issues/966
          RUSTC_WRAPPER: ""
          RUSTC_WORKSPACE_WRAPPER: sccache
        with:
          command: clippy
          args: -- --no-deps -D warnings

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Prune unused packages from cache
        uses: actions-rs/cargo@v1
        with:
          command: cache
          args: clean-unref

      - name: Stop sccache server
        run: sccache --stop-server || true
