name: Build backend artifacts

on:
  pull_request:
  workflow_dispatch:
    inputs:
      deploy:
        description: Whether to perform deployment step
        required: false
        type: boolean
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-backend:
    name: Build and upload backend
    runs-on: ubuntu-22.04
    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN_VERSION }}
          override: true

      - name: Restore cache
        uses: ./.github/actions/rust-cache
        with:
          target_key: release
          cache_version: v1

      - name: Build backend
        run: cargo build --release

      - name: Cleanup cache
        uses: ./.github/actions/rust-cache-post

      - name: Upload backend
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: target/release/bin
          if-no-files-found: error
          retention-days: 1

  build-docker:
    name: Build backend docker image
    needs: [ build-backend ]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v2

      - name: Download backend
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: target/release/

      - name: Build docker image
        run: |
          docker build --tag traffic-maker -f ./docker/backend/Dockerfile .
          docker save -o traffic-maker.tar traffic-maker

      - name: Save docker image as artifact
        uses: actions/upload-artifact@v2
        with:
          name: traffic-maker-docker
          path: traffic-maker.tar
          if-no-files-found: error
          retention-days: 1

  push-docker:
    name: Push Docker image to ECR
    needs: [ build-docker ]
    runs-on: ubuntu-22.04
    if: >
      github.event_name == 'workflow_dispatch' && github.event.inputs.deploy ||
      github.event_name == 'pull_request'
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v2

      - name: Download docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: traffic-maker-docker

      - name: Load node docker image
        run: docker load -i traffic-maker.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: 573243519133.dkr.ecr.us-east-1.amazonaws.com
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}

      - name: Push traffic-maker image to the private registry
        env:
          LOCAL_IMAGE: traffic-maker
          IMAGE_TAG: $(git rev-parse --short HEAD)
          TRAFFIC_MAKER_REGISTRY: 573243519133.dkr.ecr.us-east-1.amazonaws.com/traffic-maker
        run: |
          docker tag ${{ env.LOCAL_IMAGE }} ${{ env.TRAFFIC_MAKER_REGISTRY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.TRAFFIC_MAKER_REGISTRY }}:${{ env.IMAGE_TAG }}
